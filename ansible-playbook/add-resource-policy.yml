---
- name: Create new resource policy in Azure
  hosts: localhost
  # become: true

  vars_prompt:

    - name: policy_ev
      prompt: Choose an environment between dev, prod or common
      private: false

    - name: policy_name
      prompt: New policy name
      private: false

    - name: policy_description
      prompt: Summary of the policy rule
      private: false

    - name: policy_rule
      prompt: JSON Object representing the new policy rule
      private: false

  pre_tasks:
    - name: "Check if user selected a valid environment"
      ansible.builtin.assert:
        that: (policy_ev == 'dev' or policy_ev == 'prod' or policy_ev == 'common')

  vars:
    git_repo: "git@github.com:Red-Hat-Demo-Use-Cases/demo-aap-terraform-integration.git"
    local_repo_dir: "/tmp/aaa"
    policy_unique_name: "{{ policy_ev }}-{{ policy_name }}-{{ 99999999 | random | to_uuid }}"
    new_policy_filename: "{{ policy_unique_name }}.json"
    tower_job_id: "00000"
    # policies_tfvars_file: "{{ policy_ev }}.policies.{{ 'tfvars' if (policy_ev == 'common') else 'auto.tfvars'}}"
    policies_tfvars_file: "{% if policy_ev == 'common' %}{{ policy_ev }}.policies.auto.tfvars{% else %}{{ policy_ev }}.policies.tfvars{% endif %}"


# clone terraform-plan 
# add policy block in the xxx.policies.tfvars
# add policy rule in the az-rg-policies folder


  tasks:
    - name: Fetch git repository
      ansible.builtin.git:
        repo: "{{ git_repo }}"
        dest: "{{ local_repo_dir }}"
        clone: true
        force: true

    - name: Write policy in its json file
      ansible.builtin.copy:
        dest: "{{ local_repo_dir }}/terraform-plan/az-rg-policies/{{ new_policy_filename }}"
        mode: '0644'
        content: "{{ policy_rule }}"
        # owner: bin
        # group: wheel

    - name: Add string in file
      ansible.builtin.blockinfile:
        path: "{{ local_repo_dir }}/terraform-plan/{{ policies_tfvars_file }}"
        insertbefore: "## DYNAMIC-INSERT"
        marker: "# {mark} ANSIBLE MANAGED POLICY {{ policy_unique_name }}\n"
        block: |
                  {
                    name = "{{ policy_name }}"
                    description = "{{ policy_description }}"
                    rule = "az-rg-policies/{{ new_policy_filename }}"
                  },

    - name: "Add output directory to git"
      ansible.builtin.shell: |
        git add -A && git commit -m "RHAAP Job ID {{ tower_job_id }}: Automated Commit by Ansible  " && git push
      args:
        chdir: "{{ local_repo_dir }}"
      ignore_errors: true
      register: output
      failed_when: >
        output.msg != "" and
        ("error" in output.msg or
        "conflict" in output.msg or
        "Errno" in output.msg or
        "fatal" in output.msg or
        (output.stdout != "" and
        "nothing to commit, working tree clean" not in output.stdout) or
        (output.stderr != ""))

  # tasks:
  #   - name: Write debug message
  #     ansible.builtin.debug:
  #       msg: "Generate {{ policy_name }}"
